/************************************************************************************
 * Copyright (c) 2015Microsoft All Rights Reserved.
 * CLR版本： 4.0.30319.42000
 *机器名称：CARFUN-PC
 *公司名称：Microsoft
 *命名空间：_1.KeepFaith_Infrastructure_DataStructure
 *文件名：  SortAlgorithm
 *版本号：  V1.0.0.0
 *唯一标识：3aadd040-efeb-4c02-b374-3544b741255b
 *当前的用户域：carfun-PC
 *创建人：  swustlzx
 *电子邮箱：swustlzx@126.com
 *创建时间：2015/10/19 11:47:54
 *描述：
 *
 *=====================================================================
 *修改标记
 *修改时间：2015/10/19 11:47:54
 *修改人： carfun
 *版本号： V1.0.0.0
 *描述：
 *
/************************************************************************************/

using System;

namespace _1.KeepFaith_Infrastructure_DataStructure
{
    public class SortAlgorithm
    {
        #region 快速排序
        /*快速排序由C. A. R. Hoare在1962年提出。
         * 它的基本思想是：通过一趟排序将要排序的数据分割成独立的两部分，
         * 其中一部分的所有数据都比另外一部分的所有数据都要小，
         * 然后再按此方法对这两部分数据分别进行快速排序，
         * 整个排序过程可以递归进行，
         * 以此达到整个数据变成有序序列。
         */
        /*一趟快速排序的算法是：
         * 1）设置两个变量i、j，排序开始的时候：i=0，j=N-1；
         * 2）以第一个数组元素作为关键数据，赋值给key，即key=A[0]；
         * 3）从j开始向前搜索，即由后开始向前搜索(j--)，找到第一个小于key的值A[j]，将A[j]和A[i]互换；
         * 4）从i开始向后搜索，即由前开始向后搜索(i++)，找到第一个大于key的A[i]，将A[i]和A[j]互换；
         * 5）重复第3、4步，直到i=j； (3,4步中，没找到符合条件的值，即3中A[j]不小于key,4中A[i]不大于key的时候改变j、i的值，
         * 使得j=j-1，i=i+1，直至找到为止。找到符合条件的值，进行交换的时候i， 
         * j指针位置不变。另外，i==j这一过程一定正好是i+或j-完成的时候，此时令循环结束）。
         */
        public void QuickSort()
        {
            int[] array = {49, 38, 65, 97, 76, 13, 27};
            var left = 0;
            var right = array.Length - 1;
            var key = array[0];

            for (var i = right; i > 0 ; i--)
            {
                for(var j = left ;i < array.length ; j ++)
		{
		      if()
		      {
			    
		      }

		}
            }

        }
        #endregion
    }
}
